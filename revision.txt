- ) .env files should not be included in the repo. Document any required variables in the README.md file
- () It is customary to use camel case in JS. Avoid Snake case names (e.g. STYLED_BottomSection_Container)
    - Avoid adding the word STYLED to the component if it can be avoided.
        - <Footer /> might have been more appropriate 
- ) Make use of <Typography> when rendering text
- ) Not all text is described by the locale JSON files
    - do not forget to include the error messages in the locale files
- ) Try to define theme colors and dimensions in the theme as properties. Do not hardcode the values in styled components 
    - Consider creating variants of existing MUI components
- () using fragments in JSX (<> …. </>) is only useful if you intend to return more than one element. If you only return a single element then there isn’t a need to use them
- ) MUI has many base elements such as <Container> and <Modal> that you should build on instead of using basic HTML elements such as <div> or <h1>…
- () consider using barrel exports to simplify importing multiple related elements. Example:

import { generateCallCountByHourSeriesData } from "../../../utils/data/charts/chart_series_generators/utils_call_count_by_hour_series";
import { generateCallCountByHourOptions } from "../../../utils/data/charts/chart_options_generators/utils_call_count_by_hour_options";
import { generateCallCountByHourTotals } from "../../../utils/data/charts/chart_totals_generators/utils_call_count_by_hour_totals";


after some refactoring and renaming, it could look like:

import { genCallCountByHourData , genCallCountByHourOptions, genCallCountByHourTotals } from "../../../utils/data/charts/callCountByHour";

callCountByHour can be a folder with an index.ts file that re-exports the individual files for the series data, options, and totals{coode}
